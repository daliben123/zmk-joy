/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

#include <zephyr/dt-bindings/input/input-event-codes.h>
/* Reference: https://docs.zephyrproject.org/apidoc/latest/group__input__events.html */

#include <input/processors.dtsi>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix-transform = &default_transform;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        wakeup-source;

        col-gpios
            = <&pro_micro 2 GPIO_ACTIVE_HIGH> // col 0
            , <&pro_micro 3 GPIO_ACTIVE_HIGH> // col 1
            , <&pro_micro 4 GPIO_ACTIVE_HIGH> // col 2
            , <&pro_micro 5 GPIO_ACTIVE_HIGH> // col 3
            , <&pro_micro 6 GPIO_ACTIVE_HIGH> // col 4
            , <&pro_micro 10 GPIO_ACTIVE_HIGH> // col 5
            , <&pro_micro 16 GPIO_ACTIVE_HIGH> // col 6
            , <&pro_micro 14 GPIO_ACTIVE_HIGH> // col 7
            , <&pro_micro 15 GPIO_ACTIVE_HIGH> // col 8
            , <&pro_micro 18 GPIO_ACTIVE_HIGH> // col 9
            ;

        row-gpios
            = <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 0
            , <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 1
            , <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 2
            , <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 3
            , <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 4
            ;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <5>;

         map = <
        RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) 
        RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) 
        RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) 
        RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) 
                RC(4,1) RC(4,2) RC(4,3)         RC(4,5)         RC(4,7) RC(4,8) RC(4,9)
         >;
    };
};

&adc {
	status = "okay";
};

/ {
	anin0: analog_input_0 {
		compatible = "zmk,analog-input";
		sampling-hz = <100>;
		x-ch {
			io-channels = <&adc 1>;
			mv-mid = <512>;
			mv-min-max = <10>;
			mv-deadzone = <100>;
			scale-multiplier = <1>;
			scale-divisor = <1>;
			invert;
			evt-type = <INPUT_EV_REL>;
			input-code = <INPUT_REL_X>;
		};
		y-ch {
			io-channels = <&adc 0>;
			mv-mid = <512>;
			mv-min-max = <10>;
			mv-deadzone = <100>;
			scale-multiplier = <1>;
			scale-divisor = <1>;
			invert;
			evt-type = <INPUT_EV_REL>;
			input-code = <INPUT_REL_Y>;

			/* enable report mdoe for gamepad axix or knob */
			/* to only call input_report on quantquantized value is updated */
			report-on-change-only;

		};
	};
};

/ {
    joystick_listener {
        compatible = "zmk,input-listener";
        device = <&anin0>;
    };
};
